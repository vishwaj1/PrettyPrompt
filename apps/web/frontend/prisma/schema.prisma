generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------- NextAuth default models ----------
model User {
  id            String   @id @default(cuid())
  name          String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  passwordHash  String?        // for credentials flow
  accounts      Account[]
  sessions      Session[]
  prompts     Prompt[] 
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  access_token      String?  @db.Text
  expires_at        Int?
  refresh_token     String?  @db.Text
  id_token          String?  @db.Text
  scope             String?
  token_type        String?
  user              User     @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Prompt {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id])
  originalPrompt   String
  rewrittenPrompt  String
  mode             String
  targetModel      String
  createdAt        DateTime @default(now())

  @@index([userId, createdAt])
}

